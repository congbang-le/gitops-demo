name: Build and Deploy to GKE

on:
  push:
    branches:
    - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Prerequisite
# Create 2 sercrets GKE_SA_KEY and GKE_PORJECT before running the pipeline
# Link: https://docs.github.com/en/actions/guides/deploying-to-google-kubernetes-engine

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: simple-app-cluster  # Update your cluster name
  GKE_ZONE: asia-southeast1-a      # Zone of your cluster
  DEPLOYMENT_NAME: simple-app-deployment  
  IMAGE: simple-app

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Build and run unit test in Docker image
    - name: Build
      run: |-
        docker build \
          --target test \
          --tag "asia.gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "asia.gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    # Update manifest to deploy new version
    - name: Update manifest to deploy new version
      run: |-
        sed "s/latest/$GITHUB_SHA/" manifests/simple-app-deployment.yaml > manifests/deployment.yaml
        cat manifests/deployment.yaml

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl apply -f manifests/deployment.yaml
        kubectl get services -o wide
